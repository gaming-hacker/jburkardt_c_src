12 June 2019 08:32:08 AM

C4_COMPLEX_LIB_TEST
  C version
  Test the C4_COMPLEX_LIB library.

TEST01
  C4_ABS computes the absolute value of a C4.

       C1=C4_UNIFORM_01          R2=C4_ABS(C1)
     ---------------------     ---------------------

      0.449860   -0.126667      0.467352
     -0.843197   -0.344280      0.910774
      0.589627    0.260090      0.644443
      0.391140    0.323400      0.507521
     -0.139466   -0.156136      0.209354
     -0.236066    0.077459      0.248450
      0.018599   -0.633214      0.633487
      0.892850    0.010314      0.892909
     -0.560465    0.763795      0.947367
      0.306357    0.026275      0.307481

TEST02
  C4_ACOS computes the inverse cosine;
  C4_COS computes the cosine;

       C1=C4_UNIFORM_01          C2 = C4_ACOS(C1)           C3 = C4_COS(C2)
     ---------------------     ---------------------     ---------------------

      0.449860   -0.126667      1.109149    0.141009      0.449860   -0.126667
     -0.843197   -0.344280      2.416418    0.498201     -0.843197   -0.344280
      0.589627    0.260090      0.973444   -0.309595      0.589627    0.260090
      0.391140    0.323400      1.192424   -0.341348      0.391140    0.323400
     -0.139466   -0.156136      1.709000    0.156993     -0.139466   -0.156135
     -0.236066    0.077459      1.808344   -0.079613     -0.236066    0.077459
      0.018599   -0.633214      1.555082    0.597163      0.018599   -0.633214
      0.892850    0.010314      0.467681   -0.022876      0.892850    0.010314
     -0.560465    0.763795      2.013147   -0.767531     -0.560465    0.763795
      0.306357    0.026275      1.259556   -0.027598      0.306357    0.026275

TEST03
  C4_ACOSH computes the inverse hyperbolic cosine;
  C4_COSH computes the hyperbolic cosine;

       C1=C4_UNIFORM_01          C2 = C4_ACOSH(C1)          C3 = C4_COSH(C2)
     ---------------------     ---------------------     ---------------------

      0.449860   -0.126667     -0.141009    1.109149      0.449860   -0.126667
     -0.843197   -0.344280     -0.498201    2.416418     -0.843197   -0.344280
      0.589627    0.260090      0.309595    0.973444      0.589627    0.260090
      0.391140    0.323400      0.341348    1.192424      0.391140    0.323400
     -0.139466   -0.156136     -0.156993    1.709000     -0.139466   -0.156135
     -0.236066    0.077459      0.079613    1.808344     -0.236066    0.077459
      0.018599   -0.633214     -0.597163    1.555082      0.018599   -0.633214
      0.892850    0.010314      0.022876    0.467681      0.892850    0.010314
     -0.560465    0.763795      0.767531    2.013147     -0.560465    0.763795
      0.306357    0.026275      0.027598    1.259556      0.306357    0.026275

TEST04
  C4_ADD computes C3 = C1 + C2.

       C1=C4_UNIFORM_01          C2=C4_UNIFORM_01          C3 = C4_ADD(C1,C2)
     ---------------------     ---------------------     ---------------------

      0.449860   -0.126667     -0.843197   -0.344280     -0.393337   -0.470947
      0.589627    0.260090      0.391140    0.323400      0.980767    0.583490
     -0.139466   -0.156136     -0.236066    0.077459     -0.375532   -0.078676
      0.018599   -0.633214      0.892850    0.010314      0.911449   -0.622901
     -0.560465    0.763795      0.306357    0.026275     -0.254108    0.790070
      0.500804   -0.779931      0.350471    0.016555      0.851275   -0.763376
      0.434989   -0.266623     -0.200947    0.270711      0.234042    0.004088
     -0.097460    0.901881     -0.770245   -0.314308     -0.867705    0.587573
     -0.889181    0.265655     -0.779871   -0.551160     -1.669052   -0.285505
      0.031360   -0.433556      0.249089    0.578743      0.280450    0.145186

TEST05
  C4_ARG computes the argument of a C4 value.

       C1=C4_UNIFORM_01          R2=C4_ARG(C1)
     ---------------------     ---------------------

      0.449860   -0.126667     -0.274464
     -0.843197   -0.344280     -2.753948
      0.589627    0.260090      0.415436
      0.391140    0.323400      0.690879
     -0.139466   -0.156136     -2.299861
     -0.236066    0.077459      2.824537
      0.018599   -0.633214     -1.541432
      0.892850    0.010314      0.011551
     -0.560465    0.763795      2.203842
      0.306357    0.026275      0.085557

TEST06
  C4_ASIN computes the inverse sine;
  C4_SIN computes the sine;

       C1=C4_UNIFORM_01          C2 = C4_ASIN(C1)           C3 = C4_SIN(C2)
     ---------------------     ---------------------     ---------------------

      0.449860   -0.126667      0.461648   -0.141009      0.449860   -0.126667
     -0.843197   -0.344280     -0.845621   -0.498201     -0.843197   -0.344280
      0.589627    0.260090      0.597353    0.309595      0.589627    0.260090
      0.391140    0.323400      0.378372    0.341348      0.391140    0.323400
     -0.139466   -0.156136     -0.138204   -0.156993     -0.139466   -0.156135
     -0.236066    0.077459     -0.237548    0.079613     -0.236066    0.077459
      0.018599   -0.633214      0.015714   -0.597163      0.018599   -0.633214
      0.892850    0.010314      1.103115    0.022876      0.892850    0.010314
     -0.560465    0.763795     -0.442350    0.767531     -0.560465    0.763795
      0.306357    0.026275      0.311241    0.027598      0.306357    0.026275

TEST07
  C4_ASINH computes the inverse hyperbolic sine;
  C4_SINH computes the hyperbolic sine;

       C1=C4_UNIFORM_01          C2 = C4_ASINH(C1)          C3 = C4_SINH(C2)
     ---------------------     ---------------------     ---------------------

      0.449860   -0.126667      0.438679   -0.115643      0.449860   -0.126667
     -0.843197   -0.344280     -0.788715   -0.262344     -0.843197   -0.344280
      0.589627    0.260090      0.572932    0.224433      0.589627    0.260090
      0.391140    0.323400      0.399232    0.303890      0.391140    0.323400
     -0.139466   -0.156136     -0.140698   -0.155225     -0.139466   -0.156136
     -0.236066    0.077459     -0.234582    0.075447     -0.236066    0.077459
      0.018599   -0.633214      0.024024   -0.685463      0.018599   -0.633214
      0.892850    0.010314      0.803563    0.007693      0.892850    0.010314
     -0.560465    0.763795     -0.665100    0.670334     -0.560465    0.763795
      0.306357    0.026275      0.301849    0.025125      0.306357    0.026275

TEST08
  C4_ATAN computes the inverse tangent;
  C4_TAN computes the tangent;

       C1=C4_UNIFORM_01          C2 = C4_ATAN(C1)          C3 = C4_TAN(C2)
     ---------------------     ---------------------     ---------------------

      0.449860   -0.126667      0.427774   -0.105499      0.449860   -0.126667
     -0.843197   -0.344280     -0.735020   -0.197908     -0.843197   -0.344280
      0.589627    0.260090      0.555251    0.192787      0.589627    0.260090
      0.391140    0.323400      0.405767    0.284294      0.391140    0.323400
     -0.139466   -0.156136     -0.141920   -0.154298     -0.139466   -0.156136
     -0.236066    0.077459     -0.233099    0.073480     -0.236066    0.077459
      0.018599   -0.633214      0.031027   -0.746154      0.018599   -0.633214
      0.892850    0.010314      0.728880    0.005739      0.892850    0.010314
     -0.560465    0.763795     -0.739806    0.556404     -0.560465    0.763795
      0.306357    0.026275      0.297455    0.024024      0.306357    0.026275

TEST09
  C4_ATANH computes the inverse hyperbolic tangent;
  C4_TANH computes the hyperbolic tangent;

       C1=C4_UNIFORM_01          C2 = C4_ATANH(C1)         C3 = C4_TANH(C2)
     ---------------------     ---------------------     ---------------------

      0.449860   -0.126667      0.473511   -0.156723      0.449860   -0.126667
     -0.843197   -0.344280     -0.800349   -0.664037     -0.843197   -0.344280
      0.589627    0.260090      0.599279    0.363538      0.589627    0.260090
      0.391140    0.323400      0.364173    0.358338      0.391140    0.323400
     -0.139466   -0.156136     -0.136934   -0.157832     -0.139466   -0.156136
     -0.236066    0.077459     -0.239027    0.081817     -0.236066    0.077459
      0.018599   -0.633214      0.013276   -0.564596      0.018599   -0.633214
      0.892850    0.010314      1.433505    0.050703      0.892850    0.010314
     -0.560465    0.763795     -0.339400    0.751900     -0.560465    0.763795
      0.306357    0.026275      0.316262    0.028986      0.306357    0.026275

TEST10
  C4_CONJ computes C2 = conj ( C1 ).

       C1=C4_UNIFORM_01          C2=C4_CONJ(C1)
     ---------------------     ---------------------

      0.449860   -0.126667      0.449860    0.126667
     -0.843197   -0.344280     -0.843197    0.344280
      0.589627    0.260090      0.589627   -0.260090
      0.391140    0.323400      0.391140   -0.323400
     -0.139466   -0.156136     -0.139466    0.156136
     -0.236066    0.077459     -0.236066   -0.077459
      0.018599   -0.633214      0.018599    0.633214
      0.892850    0.010314      0.892850   -0.010314
     -0.560465    0.763795     -0.560465   -0.763795
      0.306357    0.026275      0.306357   -0.026275

TEST11
  C4_COS computes the cosine of a C4;

       C1=C4_UNIFORM_01          C2 = C4_COS(C1)
     ---------------------     ---------------------

      0.449860   -0.126667      0.907742    0.055227
     -0.843197   -0.344280      0.704886   -0.262208
      0.589627    0.260090      0.859419   -0.146260
      0.391140    0.323400      0.973242   -0.125454
     -0.139466   -0.156136      1.002386   -0.021793
     -0.236066    0.077459      0.975184    0.018134
      0.018599   -0.633214      1.207060    0.012580
      0.892850    0.010314      0.627228   -0.008033
     -0.560465    0.763795      1.106320    0.446663
      0.306357    0.026275      0.953768   -0.007925

TEST12
  C4_COSH computes the hyperbolic cosine of a C4;

       C1=C4_UNIFORM_01          C2 = C4_COSH(C1)
     ---------------------     ---------------------

      0.449860   -0.126667      1.094069   -0.058767
     -0.843197   -0.344280      1.296250    0.319538
      0.589627    0.260090      1.139274    0.160573
      0.391140    0.323400      1.021620    0.127495
     -0.139466   -0.156136      0.997458    0.021758
     -0.236066    0.077459      1.024911   -0.018437
      0.018599   -0.633214      0.806269   -0.011007
      0.892850    0.010314      1.425707    0.010481
     -0.560465    0.763795      0.838648   -0.408272
      0.306357    0.026275      1.046934    0.008175

TEST13
  C4_CUBE_ROOT computes C2 = cube root ( C1 ).
  Check by C3 = C2 * C2.

        C1=C4_UNIFORM_01          C2=C4_CUBE_ROOT(C1)      C3=C2*C2*C2
     ---------------------     ---------------------     ---------------------

      0.449860   -0.126667      0.772790   -0.070899      0.449860   -0.126667
     -0.843197   -0.344280      0.588792   -0.770012     -0.843197   -0.344280
      0.589627    0.260090      0.855495    0.119231      0.589627    0.260090
      0.391140    0.323400      0.776602    0.182076      0.391140    0.323400
     -0.139466   -0.156136      0.427677   -0.411909     -0.139466   -0.156136
     -0.236066    0.077459      0.370005    0.508236     -0.236066    0.077459
      0.018599   -0.633214      0.747945   -0.422120      0.018599   -0.633214
      0.892850    0.010314      0.962940    0.003708      0.892850    0.010314
     -0.560465    0.763795      0.728835    0.658328     -0.560465    0.763795
      0.306357    0.026275      0.674678    0.019246      0.306357    0.026275

TEST14
  C4_DIV computes C3 = C1 / C2.

        C1=C4_UNIFORM_01          C2=C4_UNIFORM_01          C3=C4_DIV(C1,C2)
     ---------------------     ---------------------     ---------------------

      0.449860   -0.126667     -0.843197   -0.344280     -0.404710    0.315467
      0.589627    0.260090      0.391140    0.323400      1.221921   -0.345347
     -0.139466   -0.156136     -0.236066    0.077459      0.337436    0.772127
      0.018599   -0.633214      0.892850    0.010314      0.012638   -0.709352
     -0.560465    0.763795      0.306357    0.026275     -1.603825    2.630712
      0.500804   -0.779931      0.350471    0.016555      1.320880   -2.287774
      0.434989   -0.266623     -0.200947    0.270711     -1.404027   -0.564638
     -0.097460    0.901881     -0.770245   -0.314308     -0.301127   -1.048023
     -0.889181    0.265655     -0.779871   -0.551160      0.599827   -0.764557
      0.031360   -0.433556      0.249089    0.578743     -0.612376   -0.317752

TEST15
  C4_EXP computes C2 = e ^ C1.

        C1=C4_UNIFORM_01          C2=C4_EXP(C1)
     ---------------------     ---------------------

      0.449860   -0.126667      1.555529   -0.198095
     -0.843197   -0.344280      0.405080   -0.145246
      0.589627    0.260090      1.742664    0.463755
      0.391140    0.323400      1.402012    0.469908
     -0.139466   -0.156136      0.859242   -0.135259
     -0.236066    0.077459      0.787360    0.061111
      0.018599   -0.633214      0.821263   -0.602848
      0.892850    0.010314      2.441949    0.025186
     -0.560465    0.763795      0.412345    0.394903
      0.306357    0.026275      1.357998    0.035690

TEST16
  C4_INV computes C2 = 1 / C1.
  Check by C3 = 1 / C2.

        C1=C4_UNIFORM_01          C2=C4_INV(C1)             C3=C4_INV(C2)
     ---------------------     ---------------------     ---------------------

      0.449860   -0.126667      2.059624    0.579929      0.449860   -0.126667
     -0.843197   -0.344280     -1.016500    0.415041     -0.843197   -0.344280
      0.589627    0.260090      1.419738   -0.626260      0.589627    0.260090
      0.391140    0.323400      1.518530   -1.255543      0.391140    0.323400
     -0.139466   -0.156136     -3.182042    3.562381     -0.139466   -0.156136
     -0.236066    0.077459     -3.824346   -1.254865     -0.236066    0.077459
      0.018599   -0.633214      0.046347    1.577883      0.018599   -0.633214
      0.892850    0.010314      1.119860   -0.012936      0.892850    0.010314
     -0.560465    0.763795     -0.624471   -0.851021     -0.560465    0.763795
      0.306357    0.026275      3.240334   -0.277913      0.306357    0.026275

TEST17
  C4_LOG computes log ( Z ).

        C1=C4_UNIFORM_01          C2=C4_LOG(C1)             C3=C4_EXP(C2)
     ---------------------     ---------------------     ---------------------

      0.449860   -0.126667     -0.760672   -0.274464      0.449860   -0.126667
     -0.843197   -0.344280     -0.093461   -2.753948     -0.843197   -0.344280
      0.589627    0.260090     -0.439369    0.415436      0.589627    0.260090
      0.391140    0.323400     -0.678217    0.690879      0.391140    0.323400
     -0.139466   -0.156136     -1.563730   -2.299861     -0.139466   -0.156136
     -0.236066    0.077459     -1.392515    2.824537     -0.236066    0.077459
      0.018599   -0.633214     -0.456515   -1.541432      0.018599   -0.633214
      0.892850    0.010314     -0.113270    0.011551      0.892850    0.010314
     -0.560465    0.763795     -0.054069    2.203842     -0.560465    0.763795
      0.306357    0.026275     -1.179341    0.085557      0.306357    0.026275

TEST18
  C4_MAG computes the magnitude of a C4.

       C1=C4_UNIFORM_01          R2=C4_MAG(C1)
     ---------------------     ---------------------

      0.449860   -0.126667      0.467352
     -0.843197   -0.344280      0.910774
      0.589627    0.260090      0.644443
      0.391140    0.323400      0.507521
     -0.139466   -0.156136      0.209354
     -0.236066    0.077459      0.248450
      0.018599   -0.633214      0.633487
      0.892850    0.010314      0.892909
     -0.560465    0.763795      0.947367
      0.306357    0.026275      0.307481

TEST19
  C4_MUL computes C3 = C1 * C2.

        C1=C4_UNIFORM_01          C2=C4_UNIFORM_01          C3=C4_MUL(C1,C2)
     ---------------------     ---------------------     ---------------------

      0.449860   -0.126667     -0.843197   -0.344280     -0.422929   -0.048072
      0.589627    0.260090      0.391140    0.323400      0.146513    0.292417
     -0.139466   -0.156136     -0.236066    0.077459      0.045017    0.026055
      0.018599   -0.633214      0.892850    0.010314      0.023137   -0.565173
     -0.560465    0.763795      0.306357    0.026275     -0.191771    0.219267
      0.500804   -0.779931      0.350471    0.016555      0.188429   -0.265052
      0.434989   -0.266623     -0.200947    0.270711     -0.015232    0.171333
     -0.097460    0.901881     -0.770245   -0.314308      0.358536   -0.664037
     -0.889181    0.265655     -0.779871   -0.551160      0.839865    0.282905
      0.031360   -0.433556      0.249089    0.578743      0.258729   -0.089845

TEST20
  C4_NORMAL_01 generates unit pseudonormal C4's

       C1=C4_NORMAL_01(SEED)
     ---------------------

      1.679040   -0.472768
     -0.566060   -0.231124
      1.212934    0.535037
      1.269381    1.049543
     -1.666086   -1.865228
     -2.242464    0.735809
      0.039675   -1.350736
      0.673068    0.007775
     -0.275127    0.374940
      2.164005    0.185600

TEST21
  C4_SIN computes the sine of a C4;

       C1=C4_UNIFORM_01          C2 = C4_SIN(C1)
     ---------------------     ---------------------

      0.449860   -0.126667      0.438332   -0.114370
     -0.843197   -0.344280     -0.791469   -0.233524
      0.589627    0.260090      0.574965    0.218619
      0.391140    0.323400      0.401353    0.304214
     -0.139466   -0.156136     -0.140712   -0.155249
     -0.236066    0.077459     -0.234582    0.075386
      0.018599   -0.633214      0.022453   -0.676269
      0.892850    0.010314      0.778904    0.006469
     -0.560465    0.763795     -0.694324    0.711703
      0.306357    0.026275      0.301691    0.025055

TEST22
  C4_SINH computes the hyperbolic sine of a C4;

       C1=C4_UNIFORM_01          C2 = C4_SINH(C1)
     ---------------------     ---------------------

      0.449860   -0.126667      0.461460   -0.139329
     -0.843197   -0.344280     -0.891170   -0.464784
      0.589627    0.260090      0.603391    0.303181
      0.391140    0.323400      0.380392    0.342413
     -0.139466   -0.156136     -0.138216   -0.157017
     -0.236066    0.077459     -0.237551    0.079548
      0.018599   -0.633214      0.014994   -0.591841
      0.892850    0.010314      1.016242    0.014705
     -0.560465    0.763795     -0.426304    0.803175
      0.306357    0.026275      0.311064    0.027515

TEST23
  C4_SQRT computes C2 = sqrt ( C1 ).
  Check by C3 = C2 * C2.

        C1=C4_UNIFORM_01          C2=C4_SQRT(C1)            C3=C2*C2
     ---------------------     ---------------------     ---------------------

      0.449860   -0.126667      0.677205   -0.093522      0.449860   -0.126667
     -0.843197   -0.344280      0.183817   -0.936475     -0.843197   -0.344280
      0.589627    0.260090      0.785516    0.165554      0.589627    0.260090
      0.391140    0.323400      0.670321    0.241228      0.391140    0.323400
     -0.139466   -0.156136      0.186933   -0.417624     -0.139466   -0.156136
     -0.236066    0.077459      0.078687    0.492197     -0.236066    0.077459
      0.018599   -0.633214      0.571002   -0.554476      0.018599   -0.633214
      0.892850    0.010314      0.944923    0.005457      0.892850    0.010314
     -0.560465    0.763795      0.439831    0.868283     -0.560465    0.763795
      0.306357    0.026275      0.554003    0.023714      0.306357    0.026275

TEST24
  C4_SUB computes C3 = C1 - C2.

       C1=C4_UNIFORM_01          C2=C4_UNIFORM_01          C3 = C4_SUB(C1,C2)
     ---------------------     ---------------------     ---------------------

      0.449860   -0.126667     -0.843197   -0.344280      1.293056    0.217613
      0.589627    0.260090      0.391140    0.323400      0.198487   -0.063310
     -0.139466   -0.156136     -0.236066    0.077459      0.096601   -0.233595
      0.018599   -0.633214      0.892850    0.010314     -0.874250   -0.643528
     -0.560465    0.763795      0.306357    0.026275     -0.866822    0.737520
      0.500804   -0.779931      0.350471    0.016555      0.150333   -0.796486
      0.434989   -0.266623     -0.200947    0.270711      0.635936   -0.537333
     -0.097460    0.901881     -0.770245   -0.314308      0.672785    1.216188
     -0.889181    0.265655     -0.779871   -0.551160     -0.109310    0.816815
      0.031360   -0.433556      0.249089    0.578743     -0.217729   -1.012299

TEST25
  C4_TAN computes the tangent of a C4;

       C1=C4_UNIFORM_01          C2 = C4_TAN(C1)
     ---------------------     ---------------------

      0.449860   -0.126667      0.473464   -0.154800
     -0.843197   -0.344280     -0.878091   -0.657932
      0.589627    0.260090      0.608112    0.357871
      0.391140    0.323400      0.366014    0.359758
     -0.139466   -0.156136     -0.136945   -0.157856
     -0.236066    0.077459     -0.239031    0.081750
      0.018599   -0.633214      0.012761   -0.560394
      0.892850    0.010314      1.241482    0.026213
     -0.560465    0.763795     -0.316310    0.771013
      0.306357    0.026275      0.316075    0.028896

TEST26
  C4_TO_CARTESIAN computes C4 -> ( X, Y ).
  CARTESIAN_TO_C4 computes ( X, Y ) -> C4.

        C1=C4_UNIFORM_01    (X2,Y2)=C4_TO_CARTESIAN(C1)     C3=CARTESIAN_TO_C4(X2,Y2)
     ---------------------     ---------------------     ---------------------

      0.449860   -0.126667      0.449860   -0.126667      0.449860   -0.126667
     -0.843197   -0.344280     -0.843197   -0.344280     -0.843197   -0.344280
      0.589627    0.260090      0.589627    0.260090      0.589627    0.260090
      0.391140    0.323400      0.391140    0.323400      0.391140    0.323400
     -0.139466   -0.156136     -0.139466   -0.156136     -0.139466   -0.156136
     -0.236066    0.077459     -0.236066    0.077459     -0.236066    0.077459
      0.018599   -0.633214      0.018599   -0.633214      0.018599   -0.633214
      0.892850    0.010314      0.892850    0.010314      0.892850    0.010314
     -0.560465    0.763795     -0.560465    0.763795     -0.560465    0.763795
      0.306357    0.026275      0.306357    0.026275      0.306357    0.026275

TEST27
  C4_TO_POLAR computes C4 -> ( R, T ).
  POLAR_TO_C4 computes ( R, T ) -> C4.

        C1=C4_UNIFORM_01     (X2,Y2)=C4_TO_POLAR(C1)     C3=POLAR_TO_C4(X2,Y2)
     ---------------------     ---------------------     ---------------------

      0.449860   -0.126667      0.467352   -0.274464      0.449860   -0.126667
     -0.843197   -0.344280      0.910774   -2.753948     -0.843197   -0.344280
      0.589627    0.260090      0.644443    0.415436      0.589627    0.260090
      0.391140    0.323400      0.507521    0.690879      0.391140    0.323400
     -0.139466   -0.156136      0.209354   -2.299861     -0.139466   -0.156136
     -0.236066    0.077459      0.248450    2.824537     -0.236066    0.077459
      0.018599   -0.633214      0.633487   -1.541432      0.018599   -0.633214
      0.892850    0.010314      0.892909    0.011551      0.892850    0.010314
     -0.560465    0.763795      0.947367    2.203842     -0.560465    0.763795
      0.306357    0.026275      0.307481    0.085557      0.306357    0.026275

TEST28
  C4_UNIFORM_01 returns a uniformly random "unit" C4

       C1=C4_UNIFORM_01(SEED)
     ---------------------

      0.449860   -0.126667
     -0.843197   -0.344280
      0.589627    0.260090
      0.391140    0.323400
     -0.139466   -0.156136
     -0.236066    0.077459
      0.018599   -0.633214
      0.892850    0.010314
     -0.560465    0.763795
      0.306357    0.026275

C4_COMPLEX_LIB_TEST
  Normal end of execution.

12 June 2019 08:32:08 AM
