21 January 2020 08:57:48 AM

SGMGA_VCN_TEST
  C version
  Test the SGMGA_VCN and SGMGA_VCN_ORDERED functions.

SGMGA_VCN_TESTS
  calls SGMGA_VCN_TEST.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000

  Q_MIN:         -2.000000
  Q_MAX:          0.000000
  LEVEL_1D_MAX:                    1         1

         1        0.000000         0         0

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000

  Q_MIN:         -1.000000
  Q_MAX:          1.000000
  LEVEL_1D_MAX:                    2         2

         1        0.000000         0         0
         2        1.000000         1         0
         3        1.000000         0         1

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000

  Q_MIN:          0.000000
  Q_MAX:          2.000000
  LEVEL_1D_MAX:                    3         3

         1        1.000000         1         0
         2        2.000000         2         0
         3        1.000000         0         1
         4        2.000000         1         1
         5        2.000000         0         2

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000

  Q_MIN:          1.000000
  Q_MAX:          3.000000
  LEVEL_1D_MAX:                    4         4

         1        2.000000         2         0
         2        3.000000         3         0
         3        2.000000         1         1
         4        3.000000         2         1
         5        2.000000         0         2
         6        3.000000         1         2
         7        3.000000         0         3

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000

  Q_MIN:          2.000000
  Q_MAX:          4.000000
  LEVEL_1D_MAX:                    5         5

         1        3.000000         3         0
         2        4.000000         4         0
         3        3.000000         2         1
         4        4.000000         3         1
         5        3.000000         1         2
         6        4.000000         2         2
         7        3.000000         0         3
         8        4.000000         1         3
         9        4.000000         0         4

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000        1.000000

  Q_MIN:         -3.000000
  Q_MAX:          0.000000
  LEVEL_1D_MAX:                    1         1         1

         1        0.000000         0         0         0

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000        1.000000

  Q_MIN:         -2.000000
  Q_MAX:          1.000000
  LEVEL_1D_MAX:                    2         2         2

         1        0.000000         0         0         0
         2        1.000000         1         0         0
         3        1.000000         0         1         0
         4        1.000000         0         0         1

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000        1.000000

  Q_MIN:         -1.000000
  Q_MAX:          2.000000
  LEVEL_1D_MAX:                    3         3         3

         1        0.000000         0         0         0
         2        1.000000         1         0         0
         3        2.000000         2         0         0
         4        1.000000         0         1         0
         5        2.000000         1         1         0
         6        2.000000         0         2         0
         7        1.000000         0         0         1
         8        2.000000         1         0         1
         9        2.000000         0         1         1
        10        2.000000         0         0         2

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000        1.000000

  Q_MIN:          0.000000
  Q_MAX:          3.000000
  LEVEL_1D_MAX:                    4         4         4

         1        1.000000         1         0         0
         2        2.000000         2         0         0
         3        3.000000         3         0         0
         4        1.000000         0         1         0
         5        2.000000         1         1         0
         6        3.000000         2         1         0
         7        2.000000         0         2         0
         8        3.000000         1         2         0
         9        3.000000         0         3         0
        10        1.000000         0         0         1
        11        2.000000         1         0         1
        12        3.000000         2         0         1
        13        2.000000         0         1         1
        14        3.000000         1         1         1
        15        3.000000         0         2         1
        16        2.000000         0         0         2
        17        3.000000         1         0         2
        18        3.000000         0         1         2
        19        3.000000         0         0         3

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000        1.000000

  Q_MIN:          1.000000
  Q_MAX:          4.000000
  LEVEL_1D_MAX:                    5         5         5

         1        2.000000         2         0         0
         2        3.000000         3         0         0
         3        4.000000         4         0         0
         4        2.000000         1         1         0
         5        3.000000         2         1         0
         6        4.000000         3         1         0
         7        2.000000         0         2         0
         8        3.000000         1         2         0
         9        4.000000         2         2         0
        10        3.000000         0         3         0
        11        4.000000         1         3         0
        12        4.000000         0         4         0
        13        2.000000         1         0         1
        14        3.000000         2         0         1
        15        4.000000         3         0         1
        16        2.000000         0         1         1
        17        3.000000         1         1         1
        18        4.000000         2         1         1
        19        3.000000         0         2         1
        20        4.000000         1         2         1
        21        4.000000         0         3         1
        22        2.000000         0         0         2
        23        3.000000         1         0         2
        24        4.000000         2         0         2
        25        3.000000         0         1         2
        26        4.000000         1         1         2
        27        4.000000         0         2         2
        28        3.000000         0         0         3
        29        4.000000         1         0         3
        30        4.000000         0         1         3
        31        4.000000         0         0         4

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        1.000000        1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000        1.000000        1.000000

  Q_MIN:         -2.000000
  Q_MAX:          2.000000
  LEVEL_1D_MAX:                    3         3         3         3

         1        0.000000         0         0         0         0
         2        1.000000         1         0         0         0
         3        2.000000         2         0         0         0
         4        1.000000         0         1         0         0
         5        2.000000         1         1         0         0
         6        2.000000         0         2         0         0
         7        1.000000         0         0         1         0
         8        2.000000         1         0         1         0
         9        2.000000         0         1         1         0
        10        2.000000         0         0         2         0
        11        1.000000         0         0         0         1
        12        2.000000         1         0         0         1
        13        2.000000         0         1         0         1
        14        2.000000         0         0         1         1
        15        2.000000         0         0         0         2

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        1.000000        1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000        1.000000        1.000000

  Q_MIN:         -1.000000
  Q_MAX:          3.000000
  LEVEL_1D_MAX:                    4         4         4         4

         1        0.000000         0         0         0         0
         2        1.000000         1         0         0         0
         3        2.000000         2         0         0         0
         4        3.000000         3         0         0         0
         5        1.000000         0         1         0         0
         6        2.000000         1         1         0         0
         7        3.000000         2         1         0         0
         8        2.000000         0         2         0         0
         9        3.000000         1         2         0         0
        10        3.000000         0         3         0         0
        11        1.000000         0         0         1         0
        12        2.000000         1         0         1         0
        13        3.000000         2         0         1         0
        14        2.000000         0         1         1         0
        15        3.000000         1         1         1         0
        16        3.000000         0         2         1         0
        17        2.000000         0         0         2         0
        18        3.000000         1         0         2         0
        19        3.000000         0         1         2         0
        20        3.000000         0         0         3         0
        21        1.000000         0         0         0         1
        22        2.000000         1         0         0         1
        23        3.000000         2         0         0         1
        24        2.000000         0         1         0         1
        25        3.000000         1         1         0         1
        26        3.000000         0         2         0         1
        27        2.000000         0         0         1         1
        28        3.000000         1         0         1         1
        29        3.000000         0         1         1         1
        30        3.000000         0         0         2         1
        31        2.000000         0         0         0         2
        32        3.000000         1         0         0         2
        33        3.000000         0         1         0         2
        34        3.000000         0         0         1         2
        35        3.000000         0         0         0         3

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        2.000000
  LEVEL_WEIGHT:        1.000000        0.500000

  Q_MIN:         -1.500000
  Q_MAX:          0.000000
  LEVEL_1D_MAX:                    1         1

         1        0.000000         0         0

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        2.000000
  LEVEL_WEIGHT:        1.000000        0.500000

  Q_MIN:         -0.500000
  Q_MAX:          1.000000
  LEVEL_1D_MAX:                    2         3

         1        0.000000         0         0
         2        1.000000         1         0
         3        0.500000         0         1
         4        1.000000         0         2

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        2.000000
  LEVEL_WEIGHT:        1.000000        0.500000

  Q_MIN:          0.500000
  Q_MAX:          2.000000
  LEVEL_1D_MAX:                    3         5

         1        1.000000         1         0
         2        2.000000         2         0
         3        1.500000         1         1
         4        1.000000         0         2
         5        2.000000         1         2
         6        1.500000         0         3
         7        2.000000         0         4

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        2.000000
  LEVEL_WEIGHT:        1.000000        0.500000

  Q_MIN:          1.500000
  Q_MAX:          3.000000
  LEVEL_1D_MAX:                    4         7

         1        2.000000         2         0
         2        3.000000         3         0
         3        2.500000         2         1
         4        2.000000         1         2
         5        3.000000         2         2
         6        2.500000         1         3
         7        2.000000         0         4
         8        3.000000         1         4
         9        2.500000         0         5
        10        3.000000         0         6

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        2.000000
  LEVEL_WEIGHT:        1.000000        0.500000

  Q_MIN:          2.500000
  Q_MAX:          4.000000
  LEVEL_1D_MAX:                    5         9

         1        3.000000         3         0
         2        4.000000         4         0
         3        3.500000         3         1
         4        3.000000         2         2
         5        4.000000         3         2
         6        3.500000         2         3
         7        3.000000         1         4
         8        4.000000         2         4
         9        3.500000         1         5
        10        3.000000         0         6
        11        4.000000         1         6
        12        3.500000         0         7
        13        4.000000         0         8

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        2.000000        3.000000
  LEVEL_WEIGHT:        1.000000        0.500000        0.333333

  Q_MIN:         -1.833333
  Q_MAX:          0.000000
  LEVEL_1D_MAX:                    1         1         1

         1        0.000000         0         0         0

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        2.000000        3.000000
  LEVEL_WEIGHT:        1.000000        0.500000        0.333333

  Q_MIN:         -0.833333
  Q_MAX:          1.000000
  LEVEL_1D_MAX:                    2         3         4

         1        0.000000         0         0         0
         2        1.000000         1         0         0
         3        0.500000         0         1         0
         4        1.000000         0         2         0
         5        0.333333         0         0         1
         6        0.833333         0         1         1
         7        0.666667         0         0         2
         8        1.000000         0         0         3

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        2.000000        3.000000
  LEVEL_WEIGHT:        1.000000        0.500000        0.333333

  Q_MIN:          0.166667
  Q_MAX:          2.000000
  LEVEL_1D_MAX:                    3         5         7

         1        1.000000         1         0         0
         2        2.000000         2         0         0
         3        0.500000         0         1         0
         4        1.500000         1         1         0
         5        1.000000         0         2         0
         6        2.000000         1         2         0
         7        1.500000         0         3         0
         8        2.000000         0         4         0
         9        0.333333         0         0         1
        10        1.333333         1         0         1
        11        0.833333         0         1         1
        12        1.833333         1         1         1
        13        1.333333         0         2         1
        14        1.833333         0         3         1
        15        0.666667         0         0         2
        16        1.666667         1         0         2
        17        1.166667         0         1         2
        18        1.666667         0         2         2
        19        1.000000         0         0         3
        20        2.000000         1         0         3
        21        1.500000         0         1         3
        22        2.000000         0         2         3
        23        1.333333         0         0         4
        24        1.833333         0         1         4
        25        1.666667         0         0         5
        26        2.000000         0         0         6

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        2.000000        3.000000
  LEVEL_WEIGHT:        1.000000        0.500000        0.333333

  Q_MIN:          1.166667
  Q_MAX:          3.000000
  LEVEL_1D_MAX:                    4         7        10

         1        2.000000         2         0         0
         2        3.000000         3         0         0
         3        1.500000         1         1         0
         4        2.500000         2         1         0
         5        2.000000         1         2         0
         6        3.000000         2         2         0
         7        1.500000         0         3         0
         8        2.500000         1         3         0
         9        2.000000         0         4         0
        10        3.000000         1         4         0
        11        2.500000         0         5         0
        12        3.000000         0         6         0
        13        1.333333         1         0         1
        14        2.333333         2         0         1
        15        1.833333         1         1         1
        16        2.833333         2         1         1
        17        1.333333         0         2         1
        18        2.333333         1         2         1
        19        1.833333         0         3         1
        20        2.833333         1         3         1
        21        2.333333         0         4         1
        22        2.833333         0         5         1
        23        1.666667         1         0         2
        24        2.666667         2         0         2
        25        2.166667         1         1         2
        26        1.666667         0         2         2
        27        2.666667         1         2         2
        28        2.166667         0         3         2
        29        2.666667         0         4         2
        30        2.000000         1         0         3
        31        3.000000         2         0         3
        32        1.500000         0         1         3
        33        2.500000         1         1         3
        34        2.000000         0         2         3
        35        3.000000         1         2         3
        36        2.500000         0         3         3
        37        3.000000         0         4         3
        38        1.333333         0         0         4
        39        2.333333         1         0         4
        40        1.833333         0         1         4
        41        2.833333         1         1         4
        42        2.333333         0         2         4
        43        2.833333         0         3         4
        44        1.666667         0         0         5
        45        2.666667         1         0         5
        46        2.166667         0         1         5
        47        2.666667         0         2         5
        48        2.000000         0         0         6
        49        3.000000         1         0         6
        50        2.500000         0         1         6
        51        3.000000         0         2         6
        52        2.333333         0         0         7
        53        2.833333         0         1         7
        54        2.666667         0         0         8
        55        3.000000         0         0         9

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        2.000000        3.000000
  LEVEL_WEIGHT:        1.000000        0.500000        0.333333

  Q_MIN:          2.166667
  Q_MAX:          4.000000
  LEVEL_1D_MAX:                    5         9        13

         1        3.000000         3         0         0
         2        4.000000         4         0         0
         3        2.500000         2         1         0
         4        3.500000         3         1         0
         5        3.000000         2         2         0
         6        4.000000         3         2         0
         7        2.500000         1         3         0
         8        3.500000         2         3         0
         9        3.000000         1         4         0
        10        4.000000         2         4         0
        11        2.500000         0         5         0
        12        3.500000         1         5         0
        13        3.000000         0         6         0
        14        4.000000         1         6         0
        15        3.500000         0         7         0
        16        4.000000         0         8         0
        17        2.333333         2         0         1
        18        3.333333         3         0         1
        19        2.833333         2         1         1
        20        3.833333         3         1         1
        21        2.333333         1         2         1
        22        3.333333         2         2         1
        23        2.833333         1         3         1
        24        3.833333         2         3         1
        25        2.333333         0         4         1
        26        3.333333         1         4         1
        27        2.833333         0         5         1
        28        3.833333         1         5         1
        29        3.333333         0         6         1
        30        3.833333         0         7         1
        31        2.666667         2         0         2
        32        3.666667         3         0         2
        33        3.166667         2         1         2
        34        2.666667         1         2         2
        35        3.666667         2         2         2
        36        3.166667         1         3         2
        37        2.666667         0         4         2
        38        3.666667         1         4         2
        39        3.166667         0         5         2
        40        3.666667         0         6         2
        41        3.000000         2         0         3
        42        4.000000         3         0         3
        43        2.500000         1         1         3
        44        3.500000         2         1         3
        45        3.000000         1         2         3
        46        4.000000         2         2         3
        47        2.500000         0         3         3
        48        3.500000         1         3         3
        49        3.000000         0         4         3
        50        4.000000         1         4         3
        51        3.500000         0         5         3
        52        4.000000         0         6         3
        53        2.333333         1         0         4
        54        3.333333         2         0         4
        55        2.833333         1         1         4
        56        3.833333         2         1         4
        57        2.333333         0         2         4
        58        3.333333         1         2         4
        59        2.833333         0         3         4
        60        3.833333         1         3         4
        61        3.333333         0         4         4
        62        3.833333         0         5         4
        63        2.666667         1         0         5
        64        3.666667         2         0         5
        65        3.166667         1         1         5
        66        2.666667         0         2         5
        67        3.666667         1         2         5
        68        3.166667         0         3         5
        69        3.666667         0         4         5
        70        3.000000         1         0         6
        71        4.000000         2         0         6
        72        2.500000         0         1         6
        73        3.500000         1         1         6
        74        3.000000         0         2         6
        75        4.000000         1         2         6
        76        3.500000         0         3         6
        77        4.000000         0         4         6
        78        2.333333         0         0         7
        79        3.333333         1         0         7
        80        2.833333         0         1         7
        81        3.833333         1         1         7
        82        3.333333         0         2         7
        83        3.833333         0         3         7
        84        2.666667         0         0         8
        85        3.666667         1         0         8
        86        3.166667         0         1         8
        87        3.666667         0         2         8
        88        3.000000         0         0         9
        89        4.000000         1         0         9
        90        3.500000         0         1         9
        91        4.000000         0         2         9
        92        3.333333         0         0        10
        93        3.833333         0         1        10
        94        3.666667         0         0        11
        95        4.000000         0         0        12

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        2.000000        3.000000        4.000000
  LEVEL_WEIGHT:        1.000000        0.500000        0.333333        0.250000

  Q_MIN:         -0.083333
  Q_MAX:          2.000000
  LEVEL_1D_MAX:                    3         5         7         9

         1        0.000000         0         0         0         0
         2        1.000000         1         0         0         0
         3        2.000000         2         0         0         0
         4        0.500000         0         1         0         0
         5        1.500000         1         1         0         0
         6        1.000000         0         2         0         0
         7        2.000000         1         2         0         0
         8        1.500000         0         3         0         0
         9        2.000000         0         4         0         0
        10        0.333333         0         0         1         0
        11        1.333333         1         0         1         0
        12        0.833333         0         1         1         0
        13        1.833333         1         1         1         0
        14        1.333333         0         2         1         0
        15        1.833333         0         3         1         0
        16        0.666667         0         0         2         0
        17        1.666667         1         0         2         0
        18        1.166667         0         1         2         0
        19        1.666667         0         2         2         0
        20        1.000000         0         0         3         0
        21        2.000000         1         0         3         0
        22        1.500000         0         1         3         0
        23        2.000000         0         2         3         0
        24        1.333333         0         0         4         0
        25        1.833333         0         1         4         0
        26        1.666667         0         0         5         0
        27        2.000000         0         0         6         0
        28        0.250000         0         0         0         1
        29        1.250000         1         0         0         1
        30        0.750000         0         1         0         1
        31        1.750000         1         1         0         1
        32        1.250000         0         2         0         1
        33        1.750000         0         3         0         1
        34        0.583333         0         0         1         1
        35        1.583333         1         0         1         1
        36        1.083333         0         1         1         1
        37        1.583333         0         2         1         1
        38        0.916667         0         0         2         1
        39        1.916667         1         0         2         1
        40        1.416667         0         1         2         1
        41        1.916667         0         2         2         1
        42        1.250000         0         0         3         1
        43        1.750000         0         1         3         1
        44        1.583333         0         0         4         1
        45        1.916667         0         0         5         1
        46        0.500000         0         0         0         2
        47        1.500000         1         0         0         2
        48        1.000000         0         1         0         2
        49        2.000000         1         1         0         2
        50        1.500000         0         2         0         2
        51        2.000000         0         3         0         2
        52        0.833333         0         0         1         2
        53        1.833333         1         0         1         2
        54        1.333333         0         1         1         2
        55        1.833333         0         2         1         2
        56        1.166667         0         0         2         2
        57        1.666667         0         1         2         2
        58        1.500000         0         0         3         2
        59        2.000000         0         1         3         2
        60        1.833333         0         0         4         2
        61        0.750000         0         0         0         3
        62        1.750000         1         0         0         3
        63        1.250000         0         1         0         3
        64        1.750000         0         2         0         3
        65        1.083333         0         0         1         3
        66        1.583333         0         1         1         3
        67        1.416667         0         0         2         3
        68        1.916667         0         1         2         3
        69        1.750000         0         0         3         3
        70        1.000000         0         0         0         4
        71        2.000000         1         0         0         4
        72        1.500000         0         1         0         4
        73        2.000000         0         2         0         4
        74        1.333333         0         0         1         4
        75        1.833333         0         1         1         4
        76        1.666667         0         0         2         4
        77        2.000000         0         0         3         4
        78        1.250000         0         0         0         5
        79        1.750000         0         1         0         5
        80        1.583333         0         0         1         5
        81        1.916667         0         0         2         5
        82        1.500000         0         0         0         6
        83        2.000000         0         1         0         6
        84        1.833333         0         0         1         6
        85        1.750000         0         0         0         7
        86        2.000000         0         0         0         8

  End of solutions.

SGMGA_VCN_TEST
  SGMGA_VCN considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  No attempt is made to order the LEVEL_1D values.

  IMPORTANCE:          1.000000        2.000000        3.000000        4.000000
  LEVEL_WEIGHT:        1.000000        0.500000        0.333333        0.250000

  Q_MIN:          0.916667
  Q_MAX:          3.000000
  LEVEL_1D_MAX:                    4         7        10        13

         1        1.000000         1         0         0         0
         2        2.000000         2         0         0         0
         3        3.000000         3         0         0         0
         4        1.500000         1         1         0         0
         5        2.500000         2         1         0         0
         6        1.000000         0         2         0         0
         7        2.000000         1         2         0         0
         8        3.000000         2         2         0         0
         9        1.500000         0         3         0         0
        10        2.500000         1         3         0         0
        11        2.000000         0         4         0         0
        12        3.000000         1         4         0         0
        13        2.500000         0         5         0         0
        14        3.000000         0         6         0         0
        15        1.333333         1         0         1         0
        16        2.333333         2         0         1         0
        17        1.833333         1         1         1         0
        18        2.833333         2         1         1         0
        19        1.333333         0         2         1         0
        20        2.333333         1         2         1         0
        21        1.833333         0         3         1         0
        22        2.833333         1         3         1         0
        23        2.333333         0         4         1         0
        24        2.833333         0         5         1         0
        25        1.666667         1         0         2         0
        26        2.666667         2         0         2         0
        27        1.166667         0         1         2         0
        28        2.166667         1         1         2         0
        29        1.666667         0         2         2         0
        30        2.666667         1         2         2         0
        31        2.166667         0         3         2         0
        32        2.666667         0         4         2         0
        33        1.000000         0         0         3         0
        34        2.000000         1         0         3         0
        35        3.000000         2         0         3         0
        36        1.500000         0         1         3         0
        37        2.500000         1         1         3         0
        38        2.000000         0         2         3         0
        39        3.000000         1         2         3         0
        40        2.500000         0         3         3         0
        41        3.000000         0         4         3         0
        42        1.333333         0         0         4         0
        43        2.333333         1         0         4         0
        44        1.833333         0         1         4         0
        45        2.833333         1         1         4         0
        46        2.333333         0         2         4         0
        47        2.833333         0         3         4         0
        48        1.666667         0         0         5         0
        49        2.666667         1         0         5         0
        50        2.166667         0         1         5         0
        51        2.666667         0         2         5         0
        52        2.000000         0         0         6         0
        53        3.000000         1         0         6         0
        54        2.500000         0         1         6         0
        55        3.000000         0         2         6         0
        56        2.333333         0         0         7         0
        57        2.833333         0         1         7         0
        58        2.666667         0         0         8         0
        59        3.000000         0         0         9         0
        60        1.250000         1         0         0         1
        61        2.250000         2         0         0         1
        62        1.750000         1         1         0         1
        63        2.750000         2         1         0         1
        64        1.250000         0         2         0         1
        65        2.250000         1         2         0         1
        66        1.750000         0         3         0         1
        67        2.750000         1         3         0         1
        68        2.250000         0         4         0         1
        69        2.750000         0         5         0         1
        70        1.583333         1         0         1         1
        71        2.583333         2         0         1         1
        72        1.083333         0         1         1         1
        73        2.083333         1         1         1         1
        74        1.583333         0         2         1         1
        75        2.583333         1         2         1         1
        76        2.083333         0         3         1         1
        77        2.583333         0         4         1         1
        78        1.916667         1         0         2         1
        79        2.916667         2         0         2         1
        80        1.416667         0         1         2         1
        81        2.416667         1         1         2         1
        82        1.916667         0         2         2         1
        83        2.916667         1         2         2         1
        84        2.416667         0         3         2         1
        85        2.916667         0         4         2         1
        86        1.250000         0         0         3         1
        87        2.250000         1         0         3         1
        88        1.750000         0         1         3         1
        89        2.750000         1         1         3         1
        90        2.250000         0         2         3         1
        91        2.750000         0         3         3         1
        92        1.583333         0         0         4         1
        93        2.583333         1         0         4         1
        94        2.083333         0         1         4         1
        95        2.583333         0         2         4         1
        96        1.916667         0         0         5         1
        97        2.916667         1         0         5         1
        98        2.416667         0         1         5         1
        99        2.916667         0         2         5         1
       100        2.250000         0         0         6         1
       101        2.750000         0         1         6         1
       102        2.583333         0         0         7         1
       103        2.916667         0         0         8         1
       104        1.500000         1         0         0         2
       105        2.500000         2         0         0         2
       106        1.000000         0         1         0         2
       107        2.000000         1         1         0         2
       108        3.000000         2         1         0         2
       109        1.500000         0         2         0         2
       110        2.500000         1         2         0         2
       111        2.000000         0         3         0         2
       112        3.000000         1         3         0         2
       113        2.500000         0         4         0         2
       114        3.000000         0         5         0         2
       115        1.833333         1         0         1         2
       116        2.833333         2         0         1         2
       117        1.333333         0         1         1         2
       118        2.333333         1         1         1         2
       119        1.833333         0         2         1         2
       120        2.833333         1         2         1         2
       121        2.333333         0         3         1         2
       122        2.833333         0         4         1         2
       123        1.166667         0         0         2         2
       124        2.166667         1         0         2         2
       125        1.666667         0         1         2         2
       126        2.666667         1         1         2         2
       127        2.166667         0         2         2         2
       128        2.666667         0         3         2         2
       129        1.500000         0         0         3         2
       130        2.500000         1         0         3         2
       131        2.000000         0         1         3         2
       132        3.000000         1         1         3         2
       133        2.500000         0         2         3         2
       134        3.000000         0         3         3         2
       135        1.833333         0         0         4         2
       136        2.833333         1         0         4         2
       137        2.333333         0         1         4         2
       138        2.833333         0         2         4         2
       139        2.166667         0         0         5         2
       140        2.666667         0         1         5         2
       141        2.500000         0         0         6         2
       142        3.000000         0         1         6         2
       143        2.833333         0         0         7         2
       144        1.750000         1         0         0         3
       145        2.750000         2         0         0         3
       146        1.250000         0         1         0         3
       147        2.250000         1         1         0         3
       148        1.750000         0         2         0         3
       149        2.750000         1         2         0         3
       150        2.250000         0         3         0         3
       151        2.750000         0         4         0         3
       152        1.083333         0         0         1         3
       153        2.083333         1         0         1         3
       154        1.583333         0         1         1         3
       155        2.583333         1         1         1         3
       156        2.083333         0         2         1         3
       157        2.583333         0         3         1         3
       158        1.416667         0         0         2         3
       159        2.416667         1         0         2         3
       160        1.916667         0         1         2         3
       161        2.916667         1         1         2         3
       162        2.416667         0         2         2         3
       163        2.916667         0         3         2         3
       164        1.750000         0         0         3         3
       165        2.750000         1         0         3         3
       166        2.250000         0         1         3         3
       167        2.750000         0         2         3         3
       168        2.083333         0         0         4         3
       169        2.583333         0         1         4         3
       170        2.416667         0         0         5         3
       171        2.916667         0         1         5         3
       172        2.750000         0         0         6         3
       173        1.000000         0         0         0         4
       174        2.000000         1         0         0         4
       175        3.000000         2         0         0         4
       176        1.500000         0         1         0         4
       177        2.500000         1         1         0         4
       178        2.000000         0         2         0         4
       179        3.000000         1         2         0         4
       180        2.500000         0         3         0         4
       181        3.000000         0         4         0         4
       182        1.333333         0         0         1         4
       183        2.333333         1         0         1         4
       184        1.833333         0         1         1         4
       185        2.833333         1         1         1         4
       186        2.333333         0         2         1         4
       187        2.833333         0         3         1         4
       188        1.666667         0         0         2         4
       189        2.666667         1         0         2         4
       190        2.166667         0         1         2         4
       191        2.666667         0         2         2         4
       192        2.000000         0         0         3         4
       193        3.000000         1         0         3         4
       194        2.500000         0         1         3         4
       195        3.000000         0         2         3         4
       196        2.333333         0         0         4         4
       197        2.833333         0         1         4         4
       198        2.666667         0         0         5         4
       199        3.000000         0         0         6         4
       200        1.250000         0         0         0         5
       201        2.250000         1         0         0         5
       202        1.750000         0         1         0         5
       203        2.750000         1         1         0         5
       204        2.250000         0         2         0         5
       205        2.750000         0         3         0         5
       206        1.583333         0         0         1         5
       207        2.583333         1         0         1         5
       208        2.083333         0         1         1         5
       209        2.583333         0         2         1         5
       210        1.916667         0         0         2         5
       211        2.916667         1         0         2         5
       212        2.416667         0         1         2         5
       213        2.916667         0         2         2         5
       214        2.250000         0         0         3         5
       215        2.750000         0         1         3         5
       216        2.583333         0         0         4         5
       217        2.916667         0         0         5         5
       218        1.500000         0         0         0         6
       219        2.500000         1         0         0         6
       220        2.000000         0         1         0         6
       221        3.000000         1         1         0         6
       222        2.500000         0         2         0         6
       223        3.000000         0         3         0         6
       224        1.833333         0         0         1         6
       225        2.833333         1         0         1         6
       226        2.333333         0         1         1         6
       227        2.833333         0         2         1         6
       228        2.166667         0         0         2         6
       229        2.666667         0         1         2         6
       230        2.500000         0         0         3         6
       231        3.000000         0         1         3         6
       232        2.833333         0         0         4         6
       233        1.750000         0         0         0         7
       234        2.750000         1         0         0         7
       235        2.250000         0         1         0         7
       236        2.750000         0         2         0         7
       237        2.083333         0         0         1         7
       238        2.583333         0         1         1         7
       239        2.416667         0         0         2         7
       240        2.916667         0         1         2         7
       241        2.750000         0         0         3         7
       242        2.000000         0         0         0         8
       243        3.000000         1         0         0         8
       244        2.500000         0         1         0         8
       245        3.000000         0         2         0         8
       246        2.333333         0         0         1         8
       247        2.833333         0         1         1         8
       248        2.666667         0         0         2         8
       249        3.000000         0         0         3         8
       250        2.250000         0         0         0         9
       251        2.750000         0         1         0         9
       252        2.583333         0         0         1         9
       253        2.916667         0         0         2         9
       254        2.500000         0         0         0        10
       255        3.000000         0         1         0        10
       256        2.833333         0         0         1        10
       257        2.750000         0         0         0        11
       258        3.000000         0         0         0        12

  End of solutions.

SGMGA_VCN_ORDERED_TESTS
  calls SGMGA_VCN_ORDERED_TEST.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000

  Q_MIN:         -2.000000
  Q_MAX:          0.000000
  LEVEL_1D_MAX:                    1         1

         1        0.000000         0         0

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000

  Q_MIN:         -1.000000
  Q_MAX:          1.000000
  LEVEL_1D_MAX:                    2         2

         1        0.000000         0         0
         2        1.000000         1         0
         3        1.000000         0         1

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000

  Q_MIN:          0.000000
  Q_MAX:          2.000000
  LEVEL_1D_MAX:                    3         3

         1        1.000000         1         0
         2        1.000000         0         1
         3        2.000000         2         0
         4        2.000000         1         1
         5        2.000000         0         2

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000

  Q_MIN:          1.000000
  Q_MAX:          3.000000
  LEVEL_1D_MAX:                    4         4

         1        2.000000         2         0
         2        2.000000         1         1
         3        2.000000         0         2
         4        3.000000         3         0
         5        3.000000         2         1
         6        3.000000         1         2
         7        3.000000         0         3

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000

  Q_MIN:          2.000000
  Q_MAX:          4.000000
  LEVEL_1D_MAX:                    5         5

         1        3.000000         3         0
         2        3.000000         2         1
         3        3.000000         1         2
         4        3.000000         0         3
         5        4.000000         4         0
         6        4.000000         3         1
         7        4.000000         2         2
         8        4.000000         1         3
         9        4.000000         0         4

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000        1.000000

  Q_MIN:         -3.000000
  Q_MAX:          0.000000
  LEVEL_1D_MAX:                    1         1         1

         1        0.000000         0         0         0

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000        1.000000

  Q_MIN:         -2.000000
  Q_MAX:          1.000000
  LEVEL_1D_MAX:                    2         2         2

         1        0.000000         0         0         0
         2        1.000000         1         0         0
         3        1.000000         0         1         0
         4        1.000000         0         0         1

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000        1.000000

  Q_MIN:         -1.000000
  Q_MAX:          2.000000
  LEVEL_1D_MAX:                    3         3         3

         1        0.000000         0         0         0
         2        1.000000         1         0         0
         3        1.000000         0         1         0
         4        1.000000         0         0         1
         5        2.000000         2         0         0
         6        2.000000         1         1         0
         7        2.000000         0         2         0
         8        2.000000         1         0         1
         9        2.000000         0         1         1
        10        2.000000         0         0         2

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000        1.000000

  Q_MIN:          0.000000
  Q_MAX:          3.000000
  LEVEL_1D_MAX:                    4         4         4

         1        1.000000         1         0         0
         2        1.000000         0         1         0
         3        1.000000         0         0         1
         4        2.000000         2         0         0
         5        2.000000         1         1         0
         6        2.000000         0         2         0
         7        2.000000         1         0         1
         8        2.000000         0         1         1
         9        2.000000         0         0         2
        10        3.000000         3         0         0
        11        3.000000         2         1         0
        12        3.000000         1         2         0
        13        3.000000         0         3         0
        14        3.000000         2         0         1
        15        3.000000         1         1         1
        16        3.000000         0         2         1
        17        3.000000         1         0         2
        18        3.000000         0         1         2
        19        3.000000         0         0         3

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000        1.000000

  Q_MIN:          1.000000
  Q_MAX:          4.000000
  LEVEL_1D_MAX:                    5         5         5

         1        2.000000         2         0         0
         2        2.000000         1         1         0
         3        2.000000         0         2         0
         4        2.000000         1         0         1
         5        2.000000         0         1         1
         6        2.000000         0         0         2
         7        3.000000         3         0         0
         8        3.000000         2         1         0
         9        3.000000         1         2         0
        10        3.000000         0         3         0
        11        3.000000         2         0         1
        12        3.000000         1         1         1
        13        3.000000         0         2         1
        14        3.000000         1         0         2
        15        3.000000         0         1         2
        16        3.000000         0         0         3
        17        4.000000         4         0         0
        18        4.000000         3         1         0
        19        4.000000         2         2         0
        20        4.000000         1         3         0
        21        4.000000         0         4         0
        22        4.000000         3         0         1
        23        4.000000         2         1         1
        24        4.000000         1         2         1
        25        4.000000         0         3         1
        26        4.000000         2         0         2
        27        4.000000         1         1         2
        28        4.000000         0         2         2
        29        4.000000         1         0         3
        30        4.000000         0         1         3
        31        4.000000         0         0         4

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        1.000000        1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000        1.000000        1.000000

  Q_MIN:         -2.000000
  Q_MAX:          2.000000
  LEVEL_1D_MAX:                    3         3         3         3

         1        0.000000         0         0         0         0
         2        1.000000         1         0         0         0
         3        1.000000         0         1         0         0
         4        1.000000         0         0         1         0
         5        1.000000         0         0         0         1
         6        2.000000         2         0         0         0
         7        2.000000         1         1         0         0
         8        2.000000         0         2         0         0
         9        2.000000         1         0         1         0
        10        2.000000         0         1         1         0
        11        2.000000         0         0         2         0
        12        2.000000         1         0         0         1
        13        2.000000         0         1         0         1
        14        2.000000         0         0         1         1
        15        2.000000         0         0         0         2

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        1.000000        1.000000        1.000000
  LEVEL_WEIGHT:        1.000000        1.000000        1.000000        1.000000

  Q_MIN:         -1.000000
  Q_MAX:          3.000000
  LEVEL_1D_MAX:                    4         4         4         4

         1        0.000000         0         0         0         0
         2        1.000000         1         0         0         0
         3        1.000000         0         1         0         0
         4        1.000000         0         0         1         0
         5        1.000000         0         0         0         1
         6        2.000000         2         0         0         0
         7        2.000000         1         1         0         0
         8        2.000000         0         2         0         0
         9        2.000000         1         0         1         0
        10        2.000000         0         1         1         0
        11        2.000000         0         0         2         0
        12        2.000000         1         0         0         1
        13        2.000000         0         1         0         1
        14        2.000000         0         0         1         1
        15        2.000000         0         0         0         2
        16        3.000000         3         0         0         0
        17        3.000000         2         1         0         0
        18        3.000000         1         2         0         0
        19        3.000000         0         3         0         0
        20        3.000000         2         0         1         0
        21        3.000000         1         1         1         0
        22        3.000000         0         2         1         0
        23        3.000000         1         0         2         0
        24        3.000000         0         1         2         0
        25        3.000000         0         0         3         0
        26        3.000000         2         0         0         1
        27        3.000000         1         1         0         1
        28        3.000000         0         2         0         1
        29        3.000000         1         0         1         1
        30        3.000000         0         1         1         1
        31        3.000000         0         0         2         1
        32        3.000000         1         0         0         2
        33        3.000000         0         1         0         2
        34        3.000000         0         0         1         2
        35        3.000000         0         0         0         3

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        2.000000
  LEVEL_WEIGHT:        1.000000        0.500000

  Q_MIN:         -1.500000
  Q_MAX:          0.000000
  LEVEL_1D_MAX:                    1         1

         1        0.000000         0         0

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        2.000000
  LEVEL_WEIGHT:        1.000000        0.500000

  Q_MIN:         -0.500000
  Q_MAX:          1.000000
  LEVEL_1D_MAX:                    2         3

         1        0.000000         0         0
         2        0.500000         0         1
         3        1.000000         1         0
         4        1.000000         0         2

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        2.000000
  LEVEL_WEIGHT:        1.000000        0.500000

  Q_MIN:          0.500000
  Q_MAX:          2.000000
  LEVEL_1D_MAX:                    3         5

         1        1.000000         1         0
         2        1.500000         1         1
         3        1.000000         0         2
         4        1.500000         0         3
         5        2.000000         2         0
         6        2.000000         1         2
         7        2.000000         0         4

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        2.000000
  LEVEL_WEIGHT:        1.000000        0.500000

  Q_MIN:          1.500000
  Q_MAX:          3.000000
  LEVEL_1D_MAX:                    4         7

         1        2.000000         2         0
         2        2.500000         2         1
         3        2.000000         1         2
         4        2.500000         1         3
         5        2.000000         0         4
         6        2.500000         0         5
         7        3.000000         3         0
         8        3.000000         2         2
         9        3.000000         1         4
        10        3.000000         0         6

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        2.000000
  LEVEL_WEIGHT:        1.000000        0.500000

  Q_MIN:          2.500000
  Q_MAX:          4.000000
  LEVEL_1D_MAX:                    5         9

         1        3.000000         3         0
         2        3.500000         3         1
         3        3.000000         2         2
         4        3.500000         2         3
         5        3.000000         1         4
         6        3.500000         1         5
         7        3.000000         0         6
         8        3.500000         0         7
         9        4.000000         4         0
        10        4.000000         3         2
        11        4.000000         2         4
        12        4.000000         1         6
        13        4.000000         0         8

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        2.000000        3.000000
  LEVEL_WEIGHT:        1.000000        0.500000        0.333333

  Q_MIN:         -1.833333
  Q_MAX:          0.000000
  LEVEL_1D_MAX:                    1         1         1

         1        0.000000         0         0         0

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        2.000000        3.000000
  LEVEL_WEIGHT:        1.000000        0.500000        0.333333

  Q_MIN:         -0.833333
  Q_MAX:          1.000000
  LEVEL_1D_MAX:                    2         3         4

         1        0.000000         0         0         0
         2        1.000000         1         0         0
         3        0.500000         0         1         0
         4        1.000000         0         2         0
         5        0.333333         0         0         1
         6        0.833333         0         1         1
         7        0.666667         0         0         2
         8        1.000000         0         0         3

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        2.000000        3.000000
  LEVEL_WEIGHT:        1.000000        0.500000        0.333333

  Q_MIN:          0.166667
  Q_MAX:          2.000000
  LEVEL_1D_MAX:                    3         5         7

         1        1.000000         1         0         0
         2        0.500000         0         1         0
         3        1.000000         0         2         0
         4        0.333333         0         0         1
         5        0.833333         0         1         1
         6        0.666667         0         0         2
         7        1.166667         0         1         2
         8        1.000000         0         0         3
         9        2.000000         2         0         0
        10        1.500000         1         1         0
        11        2.000000         1         2         0
        12        1.500000         0         3         0
        13        2.000000         0         4         0
        14        1.333333         1         0         1
        15        1.833333         1         1         1
        16        1.333333         0         2         1
        17        1.833333         0         3         1
        18        1.666667         1         0         2
        19        1.666667         0         2         2
        20        2.000000         1         0         3
        21        1.500000         0         1         3
        22        2.000000         0         2         3
        23        1.333333         0         0         4
        24        1.833333         0         1         4
        25        1.666667         0         0         5
        26        2.000000         0         0         6

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        2.000000        3.000000
  LEVEL_WEIGHT:        1.000000        0.500000        0.333333

  Q_MIN:          1.166667
  Q_MAX:          3.000000
  LEVEL_1D_MAX:                    4         7        10

         1        2.000000         2         0         0
         2        1.500000         1         1         0
         3        2.000000         1         2         0
         4        1.500000         0         3         0
         5        2.000000         0         4         0
         6        1.333333         1         0         1
         7        1.833333         1         1         1
         8        1.333333         0         2         1
         9        1.833333         0         3         1
        10        1.666667         1         0         2
        11        2.166667         1         1         2
        12        1.666667         0         2         2
        13        2.166667         0         3         2
        14        2.000000         1         0         3
        15        1.500000         0         1         3
        16        2.000000         0         2         3
        17        1.333333         0         0         4
        18        1.833333         0         1         4
        19        1.666667         0         0         5
        20        2.166667         0         1         5
        21        2.000000         0         0         6
        22        3.000000         3         0         0
        23        2.500000         2         1         0
        24        3.000000         2         2         0
        25        2.500000         1         3         0
        26        3.000000         1         4         0
        27        2.500000         0         5         0
        28        3.000000         0         6         0
        29        2.333333         2         0         1
        30        2.833333         2         1         1
        31        2.333333         1         2         1
        32        2.833333         1         3         1
        33        2.333333         0         4         1
        34        2.833333         0         5         1
        35        2.666667         2         0         2
        36        2.666667         1         2         2
        37        2.666667         0         4         2
        38        3.000000         2         0         3
        39        2.500000         1         1         3
        40        3.000000         1         2         3
        41        2.500000         0         3         3
        42        3.000000         0         4         3
        43        2.333333         1         0         4
        44        2.833333         1         1         4
        45        2.333333         0         2         4
        46        2.833333         0         3         4
        47        2.666667         1         0         5
        48        2.666667         0         2         5
        49        3.000000         1         0         6
        50        2.500000         0         1         6
        51        3.000000         0         2         6
        52        2.333333         0         0         7
        53        2.833333         0         1         7
        54        2.666667         0         0         8
        55        3.000000         0         0         9

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        2.000000        3.000000
  LEVEL_WEIGHT:        1.000000        0.500000        0.333333

  Q_MIN:          2.166667
  Q_MAX:          4.000000
  LEVEL_1D_MAX:                    5         9        13

         1        3.000000         3         0         0
         2        2.500000         2         1         0
         3        3.000000         2         2         0
         4        2.500000         1         3         0
         5        3.000000         1         4         0
         6        2.500000         0         5         0
         7        3.000000         0         6         0
         8        2.333333         2         0         1
         9        2.833333         2         1         1
        10        2.333333         1         2         1
        11        2.833333         1         3         1
        12        2.333333         0         4         1
        13        2.833333         0         5         1
        14        2.666667         2         0         2
        15        3.166667         2         1         2
        16        2.666667         1         2         2
        17        3.166667         1         3         2
        18        2.666667         0         4         2
        19        3.166667         0         5         2
        20        3.000000         2         0         3
        21        2.500000         1         1         3
        22        3.000000         1         2         3
        23        2.500000         0         3         3
        24        3.000000         0         4         3
        25        2.333333         1         0         4
        26        2.833333         1         1         4
        27        2.333333         0         2         4
        28        2.833333         0         3         4
        29        2.666667         1         0         5
        30        3.166667         1         1         5
        31        2.666667         0         2         5
        32        3.166667         0         3         5
        33        3.000000         1         0         6
        34        2.500000         0         1         6
        35        3.000000         0         2         6
        36        2.333333         0         0         7
        37        2.833333         0         1         7
        38        2.666667         0         0         8
        39        3.166667         0         1         8
        40        3.000000         0         0         9
        41        4.000000         4         0         0
        42        3.500000         3         1         0
        43        4.000000         3         2         0
        44        3.500000         2         3         0
        45        4.000000         2         4         0
        46        3.500000         1         5         0
        47        4.000000         1         6         0
        48        3.500000         0         7         0
        49        4.000000         0         8         0
        50        3.333333         3         0         1
        51        3.833333         3         1         1
        52        3.333333         2         2         1
        53        3.833333         2         3         1
        54        3.333333         1         4         1
        55        3.833333         1         5         1
        56        3.333333         0         6         1
        57        3.833333         0         7         1
        58        3.666667         3         0         2
        59        3.666667         2         2         2
        60        3.666667         1         4         2
        61        3.666667         0         6         2
        62        4.000000         3         0         3
        63        3.500000         2         1         3
        64        4.000000         2         2         3
        65        3.500000         1         3         3
        66        4.000000         1         4         3
        67        3.500000         0         5         3
        68        4.000000         0         6         3
        69        3.333333         2         0         4
        70        3.833333         2         1         4
        71        3.333333         1         2         4
        72        3.833333         1         3         4
        73        3.333333         0         4         4
        74        3.833333         0         5         4
        75        3.666667         2         0         5
        76        3.666667         1         2         5
        77        3.666667         0         4         5
        78        4.000000         2         0         6
        79        3.500000         1         1         6
        80        4.000000         1         2         6
        81        3.500000         0         3         6
        82        4.000000         0         4         6
        83        3.333333         1         0         7
        84        3.833333         1         1         7
        85        3.333333         0         2         7
        86        3.833333         0         3         7
        87        3.666667         1         0         8
        88        3.666667         0         2         8
        89        4.000000         1         0         9
        90        3.500000         0         1         9
        91        4.000000         0         2         9
        92        3.333333         0         0        10
        93        3.833333         0         1        10
        94        3.666667         0         0        11
        95        4.000000         0         0        12

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        2.000000        3.000000        4.000000
  LEVEL_WEIGHT:        1.000000        0.500000        0.333333        0.250000

  Q_MIN:         -0.083333
  Q_MAX:          2.000000
  LEVEL_1D_MAX:                    3         5         7         9

         1        0.000000         0         0         0         0
         2        0.500000         0         1         0         0
         3        0.333333         0         0         1         0
         4        0.833333         0         1         1         0
         5        0.666667         0         0         2         0
         6        0.250000         0         0         0         1
         7        0.750000         0         1         0         1
         8        0.583333         0         0         1         1
         9        0.916667         0         0         2         1
        10        0.500000         0         0         0         2
        11        0.833333         0         0         1         2
        12        0.750000         0         0         0         3
        13        1.000000         1         0         0         0
        14        1.500000         1         1         0         0
        15        1.000000         0         2         0         0
        16        1.500000         0         3         0         0
        17        1.333333         1         0         1         0
        18        1.833333         1         1         1         0
        19        1.333333         0         2         1         0
        20        1.833333         0         3         1         0
        21        1.666667         1         0         2         0
        22        1.166667         0         1         2         0
        23        1.666667         0         2         2         0
        24        1.000000         0         0         3         0
        25        1.500000         0         1         3         0
        26        1.333333         0         0         4         0
        27        1.833333         0         1         4         0
        28        1.666667         0         0         5         0
        29        1.250000         1         0         0         1
        30        1.750000         1         1         0         1
        31        1.250000         0         2         0         1
        32        1.750000         0         3         0         1
        33        1.583333         1         0         1         1
        34        1.083333         0         1         1         1
        35        1.583333         0         2         1         1
        36        1.916667         1         0         2         1
        37        1.416667         0         1         2         1
        38        1.916667         0         2         2         1
        39        1.250000         0         0         3         1
        40        1.750000         0         1         3         1
        41        1.583333         0         0         4         1
        42        1.916667         0         0         5         1
        43        1.500000         1         0         0         2
        44        1.000000         0         1         0         2
        45        1.500000         0         2         0         2
        46        1.833333         1         0         1         2
        47        1.333333         0         1         1         2
        48        1.833333         0         2         1         2
        49        1.166667         0         0         2         2
        50        1.666667         0         1         2         2
        51        1.500000         0         0         3         2
        52        1.833333         0         0         4         2
        53        1.750000         1         0         0         3
        54        1.250000         0         1         0         3
        55        1.750000         0         2         0         3
        56        1.083333         0         0         1         3
        57        1.583333         0         1         1         3
        58        1.416667         0         0         2         3
        59        1.916667         0         1         2         3
        60        1.750000         0         0         3         3
        61        1.000000         0         0         0         4
        62        1.500000         0         1         0         4
        63        1.333333         0         0         1         4
        64        1.833333         0         1         1         4
        65        1.666667         0         0         2         4
        66        1.250000         0         0         0         5
        67        1.750000         0         1         0         5
        68        1.583333         0         0         1         5
        69        1.916667         0         0         2         5
        70        1.500000         0         0         0         6
        71        1.833333         0         0         1         6
        72        1.750000         0         0         0         7
        73        2.000000         2         0         0         0
        74        2.000000         1         2         0         0
        75        2.000000         0         4         0         0
        76        2.000000         1         0         3         0
        77        2.000000         0         2         3         0
        78        2.000000         0         0         6         0
        79        2.000000         1         1         0         2
        80        2.000000         0         3         0         2
        81        2.000000         0         1         3         2
        82        2.000000         1         0         0         4
        83        2.000000         0         2         0         4
        84        2.000000         0         0         3         4
        85        2.000000         0         1         0         6
        86        2.000000         0         0         0         8

  End of solutions.

SGMGA_VCN_ORDERED_TEST
  SGMGA_VCN_ORDERED considers vectors:
    0 <= LEVEL_1D(1:N) <= LEVEL_1D_MAX(1:N),
  Set
    Q = sum ( LEVEL_WEIGHT(1:N) * LEVEL_1D(1:N) )
  Accept only vectors for which:
    Q_MIN < Q <= Q_MAX

  The solutions are weakly ordered by the value of Q.

  IMPORTANCE:          1.000000        2.000000        3.000000        4.000000
  LEVEL_WEIGHT:        1.000000        0.500000        0.333333        0.250000

  Q_MIN:          0.916667
  Q_MAX:          3.000000
  LEVEL_1D_MAX:                    4         7        10        13

         1        1.000000         1         0         0         0
         2        1.500000         1         1         0         0
         3        1.000000         0         2         0         0
         4        1.500000         0         3         0         0
         5        1.333333         1         0         1         0
         6        1.833333         1         1         1         0
         7        1.333333         0         2         1         0
         8        1.833333         0         3         1         0
         9        1.666667         1         0         2         0
        10        1.166667         0         1         2         0
        11        1.666667         0         2         2         0
        12        1.000000         0         0         3         0
        13        1.500000         0         1         3         0
        14        1.333333         0         0         4         0
        15        1.833333         0         1         4         0
        16        1.666667         0         0         5         0
        17        1.250000         1         0         0         1
        18        1.750000         1         1         0         1
        19        1.250000         0         2         0         1
        20        1.750000         0         3         0         1
        21        1.583333         1         0         1         1
        22        1.083333         0         1         1         1
        23        1.583333         0         2         1         1
        24        1.916667         1         0         2         1
        25        1.416667         0         1         2         1
        26        1.916667         0         2         2         1
        27        1.250000         0         0         3         1
        28        1.750000         0         1         3         1
        29        1.583333         0         0         4         1
        30        1.916667         0         0         5         1
        31        1.500000         1         0         0         2
        32        1.000000         0         1         0         2
        33        1.500000         0         2         0         2
        34        1.833333         1         0         1         2
        35        1.333333         0         1         1         2
        36        1.833333         0         2         1         2
        37        1.166667         0         0         2         2
        38        1.666667         0         1         2         2
        39        1.500000         0         0         3         2
        40        1.833333         0         0         4         2
        41        1.750000         1         0         0         3
        42        1.250000         0         1         0         3
        43        1.750000         0         2         0         3
        44        1.083333         0         0         1         3
        45        1.583333         0         1         1         3
        46        1.416667         0         0         2         3
        47        1.916667         0         1         2         3
        48        1.750000         0         0         3         3
        49        1.000000         0         0         0         4
        50        1.500000         0         1         0         4
        51        1.333333         0         0         1         4
        52        1.833333         0         1         1         4
        53        1.666667         0         0         2         4
        54        1.250000         0         0         0         5
        55        1.750000         0         1         0         5
        56        1.583333         0         0         1         5
        57        1.916667         0         0         2         5
        58        1.500000         0         0         0         6
        59        1.833333         0         0         1         6
        60        1.750000         0         0         0         7
        61        2.000000         2         0         0         0
        62        2.500000         2         1         0         0
        63        2.000000         1         2         0         0
        64        2.500000         1         3         0         0
        65        2.000000         0         4         0         0
        66        2.500000         0         5         0         0
        67        2.333333         2         0         1         0
        68        2.833333         2         1         1         0
        69        2.333333         1         2         1         0
        70        2.833333         1         3         1         0
        71        2.333333         0         4         1         0
        72        2.833333         0         5         1         0
        73        2.666667         2         0         2         0
        74        2.166667         1         1         2         0
        75        2.666667         1         2         2         0
        76        2.166667         0         3         2         0
        77        2.666667         0         4         2         0
        78        2.000000         1         0         3         0
        79        2.500000         1         1         3         0
        80        2.000000         0         2         3         0
        81        2.500000         0         3         3         0
        82        2.333333         1         0         4         0
        83        2.833333         1         1         4         0
        84        2.333333         0         2         4         0
        85        2.833333         0         3         4         0
        86        2.666667         1         0         5         0
        87        2.166667         0         1         5         0
        88        2.666667         0         2         5         0
        89        2.000000         0         0         6         0
        90        2.500000         0         1         6         0
        91        2.333333         0         0         7         0
        92        2.833333         0         1         7         0
        93        2.666667         0         0         8         0
        94        2.250000         2         0         0         1
        95        2.750000         2         1         0         1
        96        2.250000         1         2         0         1
        97        2.750000         1         3         0         1
        98        2.250000         0         4         0         1
        99        2.750000         0         5         0         1
       100        2.583333         2         0         1         1
       101        2.083333         1         1         1         1
       102        2.583333         1         2         1         1
       103        2.083333         0         3         1         1
       104        2.583333         0         4         1         1
       105        2.916667         2         0         2         1
       106        2.416667         1         1         2         1
       107        2.916667         1         2         2         1
       108        2.416667         0         3         2         1
       109        2.916667         0         4         2         1
       110        2.250000         1         0         3         1
       111        2.750000         1         1         3         1
       112        2.250000         0         2         3         1
       113        2.750000         0         3         3         1
       114        2.583333         1         0         4         1
       115        2.083333         0         1         4         1
       116        2.583333         0         2         4         1
       117        2.916667         1         0         5         1
       118        2.416667         0         1         5         1
       119        2.916667         0         2         5         1
       120        2.250000         0         0         6         1
       121        2.750000         0         1         6         1
       122        2.583333         0         0         7         1
       123        2.916667         0         0         8         1
       124        2.500000         2         0         0         2
       125        2.000000         1         1         0         2
       126        2.500000         1         2         0         2
       127        2.000000         0         3         0         2
       128        2.500000         0         4         0         2
       129        2.833333         2         0         1         2
       130        2.333333         1         1         1         2
       131        2.833333         1         2         1         2
       132        2.333333         0         3         1         2
       133        2.833333         0         4         1         2
       134        2.166667         1         0         2         2
       135        2.666667         1         1         2         2
       136        2.166667         0         2         2         2
       137        2.666667         0         3         2         2
       138        2.500000         1         0         3         2
       139        2.000000         0         1         3         2
       140        2.500000         0         2         3         2
       141        2.833333         1         0         4         2
       142        2.333333         0         1         4         2
       143        2.833333         0         2         4         2
       144        2.166667         0         0         5         2
       145        2.666667         0         1         5         2
       146        2.500000         0         0         6         2
       147        2.833333         0         0         7         2
       148        2.750000         2         0         0         3
       149        2.250000         1         1         0         3
       150        2.750000         1         2         0         3
       151        2.250000         0         3         0         3
       152        2.750000         0         4         0         3
       153        2.083333         1         0         1         3
       154        2.583333         1         1         1         3
       155        2.083333         0         2         1         3
       156        2.583333         0         3         1         3
       157        2.416667         1         0         2         3
       158        2.916667         1         1         2         3
       159        2.416667         0         2         2         3
       160        2.916667         0         3         2         3
       161        2.750000         1         0         3         3
       162        2.250000         0         1         3         3
       163        2.750000         0         2         3         3
       164        2.083333         0         0         4         3
       165        2.583333         0         1         4         3
       166        2.416667         0         0         5         3
       167        2.916667         0         1         5         3
       168        2.750000         0         0         6         3
       169        2.000000         1         0         0         4
       170        2.500000         1         1         0         4
       171        2.000000         0         2         0         4
       172        2.500000         0         3         0         4
       173        2.333333         1         0         1         4
       174        2.833333         1         1         1         4
       175        2.333333         0         2         1         4
       176        2.833333         0         3         1         4
       177        2.666667         1         0         2         4
       178        2.166667         0         1         2         4
       179        2.666667         0         2         2         4
       180        2.000000         0         0         3         4
       181        2.500000         0         1         3         4
       182        2.333333         0         0         4         4
       183        2.833333         0         1         4         4
       184        2.666667         0         0         5         4
       185        2.250000         1         0         0         5
       186        2.750000         1         1         0         5
       187        2.250000         0         2         0         5
       188        2.750000         0         3         0         5
       189        2.583333         1         0         1         5
       190        2.083333         0         1         1         5
       191        2.583333         0         2         1         5
       192        2.916667         1         0         2         5
       193        2.416667         0         1         2         5
       194        2.916667         0         2         2         5
       195        2.250000         0         0         3         5
       196        2.750000         0         1         3         5
       197        2.583333         0         0         4         5
       198        2.916667         0         0         5         5
       199        2.500000         1         0         0         6
       200        2.000000         0         1         0         6
       201        2.500000         0         2         0         6
       202        2.833333         1         0         1         6
       203        2.333333         0         1         1         6
       204        2.833333         0         2         1         6
       205        2.166667         0         0         2         6
       206        2.666667         0         1         2         6
       207        2.500000         0         0         3         6
       208        2.833333         0         0         4         6
       209        2.750000         1         0         0         7
       210        2.250000         0         1         0         7
       211        2.750000         0         2         0         7
       212        2.083333         0         0         1         7
       213        2.583333         0         1         1         7
       214        2.416667         0         0         2         7
       215        2.916667         0         1         2         7
       216        2.750000         0         0         3         7
       217        2.000000         0         0         0         8
       218        2.500000         0         1         0         8
       219        2.333333         0         0         1         8
       220        2.833333         0         1         1         8
       221        2.666667         0         0         2         8
       222        2.250000         0         0         0         9
       223        2.750000         0         1         0         9
       224        2.583333         0         0         1         9
       225        2.916667         0         0         2         9
       226        2.500000         0         0         0        10
       227        2.833333         0         0         1        10
       228        2.750000         0         0         0        11
       229        3.000000         3         0         0         0
       230        3.000000         2         2         0         0
       231        3.000000         1         4         0         0
       232        3.000000         0         6         0         0
       233        3.000000         2         0         3         0
       234        3.000000         1         2         3         0
       235        3.000000         0         4         3         0
       236        3.000000         1         0         6         0
       237        3.000000         0         2         6         0
       238        3.000000         0         0         9         0
       239        3.000000         2         1         0         2
       240        3.000000         1         3         0         2
       241        3.000000         0         5         0         2
       242        3.000000         1         1         3         2
       243        3.000000         0         3         3         2
       244        3.000000         0         1         6         2
       245        3.000000         2         0         0         4
       246        3.000000         1         2         0         4
       247        3.000000         0         4         0         4
       248        3.000000         1         0         3         4
       249        3.000000         0         2         3         4
       250        3.000000         0         0         6         4
       251        3.000000         1         1         0         6
       252        3.000000         0         3         0         6
       253        3.000000         0         1         3         6
       254        3.000000         1         0         0         8
       255        3.000000         0         2         0         8
       256        3.000000         0         0         3         8
       257        3.000000         0         1         0        10
       258        3.000000         0         0         0        12

  End of solutions.

SGMGA_VCN_TEST
  Normal end of execution.

21 January 2020 08:57:48 AM
