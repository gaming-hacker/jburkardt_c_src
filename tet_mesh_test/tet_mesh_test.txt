21 January 2020 11:07:17 AM

TET_MESH_TEST
  C version
  Test the TET_MESH library.

TEST001
  R8MAT_SOLVE solves linear systems.

  The linear system:

  Col:          0             1             2             3             4     
  Row

    0:               1               2               3              14               7
    1:               4               5               6              32              16
    2:               7               8               0              23               7

  The computed solutions:

         1.4           1.4  
         2.4           0.4  
         3.4           2.4  

TEST002
  For an order 4 tetrahedron,
  TETRAHEDRON_ORDER4_PHYSICAL_TO_REFERENCE
  maps a physical point to a reference point.
  TETRAHEDRON_ORDER4_REFERENCE_TO_PHYSICAL 
  maps a reference point to a physical point.

     ( R, S, T )          ==>  ( X, Y, Z )           ==> ( R2, S2, T2 )

  0.0110327  0.100407  0.488523     5.52162  0.689338  0.977047    0.0110327  0.100407  0.488523
  0.019397  0.496566  0.0351568     5.09335   1.02829  0.0703136    0.019397  0.496566  0.0351568
  0.0186396  0.201736  0.00924717     5.06517  0.412719  0.0184943    0.0186396  0.201736  0.00924717
  0.290233  0.117486  0.0959462     5.96665  0.330919  0.191892    0.290233  0.117486  0.0959462
  0.0772041  0.129893  0.510881     5.74249  0.770667   1.02176    0.0772041  0.129893  0.510881
  0.00226154  0.0753482  0.0407064     5.04749  0.191403  0.0814129    0.00226154  0.0753482  0.0407064
  0.345701  0.00749041  0.0456696     6.08277  0.0606504  0.0913391    0.345701  0.00749041  0.0456696
  0.00460277  0.328675  0.00248782      5.0163  0.659838  0.00497563    0.00460277  0.328675  0.00248782
  0.00324842  0.540593  0.0693259     5.07907   1.15051  0.138652    0.00324842  0.540593  0.0693259
  0.0175102  0.469235  0.171037     5.22357   1.10951  0.342075    0.0175102  0.469235  0.171037

TEST003
  For an order 10 tet mesh,
  TETRAHEDRON_ORDER10_TO_ORDER4
  makes a linear (order 4) tet mesh by using
  the existing nodes, and replacing each
  quadratic tetrahedron by 8 linear tetrahedrons.

  First 5 quadratic tetrahedrons:

  Row:      0       1       2       3       4       5       6       7       8       9  
  Col

    0:      3       2       4       0      15      18      16      10       9      11  
    1:      3       1       4       0      12      18      13      10       8      11  
    2:      3       6       2       4      20      15      17      18      23      16  
    3:      3       6       7       4      20      21      26      18      23      24  
    4:      3       5       1       4      19      12      14      18      22      13  

  Quadratic mesh size is       6
  Linearized mesh size will be 48

  First 5 linear tetrahedrons:

  Row:      0       1       2       3  
  Col

    0:      3      15      18      16  
    1:      2      15      10       9  
    2:      4      18      10       9  
    3:      0      16       9      11  
    4:     15      18      16       9  

TEST004
  TET_MESH_NODE_ORDER determines the order of 
  each node in a tet mesh.

  The order of a node is the number of tetrahedrons
  that use the node as part of their definition.

  This mesh has tetrahedron order 10
  The number of tetrahedrons is   6

  The tet mesh:

  Row:      0       1       2       3       4       5       6       7       8       9  
  Col

    0:      3       2       4       0      15      18      16      10       9      11  
    1:      3       1       4       0      12      18      13      10       8      11  
    2:      3       6       2       4      20      15      17      18      23      16  
    3:      3       6       7       4      20      21      26      18      23      24  
    4:      3       5       1       4      19      12      14      18      22      13  
    5:      3       5       7       4      19      21      25      18      22      24  

  Node orders:

       0:        2
       1:        2
       2:        2
       3:        6
       4:        6
       5:        2
       6:        2
       7:        2
       8:        1
       9:        1
      10:        2
      11:        2
      12:        2
      13:        2
      14:        1
      15:        2
      16:        2
      17:        1
      18:        6
      19:        2
      20:        2
      21:        2
      22:        2
      23:        2
      24:        2
      25:        1
      26:        1

  Check that the following are equal:

  Number of tetrahedrons * order = 60
  Sum of node orders             = 60

TEST005
  TETRAHEDRON_BARYCENTRIC computes the barycentric
  coordinates of a point.

  Random tetrahedron:

  Row:        0             1             2     
  Col

    0:        0.218418        0.956318        0.829509
    1:        0.561695        0.415307       0.0661187
    2:        0.257578        0.109957        0.043829
    3:        0.633966       0.0617272        0.449539

  C1 =         0.205261        0.386001        0.407797     0.000940293
  C2 =         0.205261        0.386001        0.407797     0.000940293

  C1 =         0.661672        0.258587       0.0697018       0.0100389
  C2 =         0.661672        0.258587       0.0697018       0.0100389

  C1 =         0.469308        0.459339       0.0672493      0.00410386
  C2 =         0.469308        0.459339       0.0672493      0.00410386

  C1 =         0.158907        0.557045       0.0693886        0.214659
  C2 =         0.158907        0.557045       0.0693886        0.214659

  C1 =         0.351099        0.113977        0.295282        0.239643
  C2 =         0.351099        0.113977        0.295282        0.239643

  Random tetrahedron:

  Row:        0             1             2     
  Col

    0:        0.861216        0.453794        0.911977
    1:        0.597917        0.188955        0.761492
    2:        0.396988        0.185314        0.574366
    3:        0.367027        0.617205        0.361529

  C1 =         0.158379        0.531428        0.087551        0.222643
  C2 =         0.158379        0.531428        0.087551        0.222643

  C1 =         0.340586        0.340444       0.0255384        0.293431
  C2 =         0.340586        0.340444       0.0255384        0.293431

  C1 =        0.0459748        0.405151        0.388127        0.160747
  C2 =        0.0459748        0.405151        0.388127        0.160747

  C1 =         0.317619        0.269648         0.26901        0.143724
  C2 =         0.317619        0.269648         0.26901        0.143724

  C1 =         0.464782        0.278294      0.00882284          0.2481
  C2 =         0.464782        0.278294      0.00882284          0.2481

  Random tetrahedron:

  Row:        0             1             2     
  Col

    0:       0.0419093        0.368851        0.271724
    1:        0.858573       0.0290366       0.0174423
    2:        0.152384        0.114319        0.353907
    3:        0.119308        0.206653        0.212924

  C1 =         0.275476        0.363821        0.263855       0.0968481
  C2 =         0.275476        0.363821        0.263855       0.0968481

  C1 =         0.274841        0.258824        0.160319        0.306016
  C2 =         0.274841        0.258824        0.160319        0.306016

  C1 =         0.393103        0.378144        0.216193       0.0125602
  C2 =         0.393103        0.378144        0.216193       0.0125602

  C1 =         0.205245        0.124714        0.385108        0.284932
  C2 =         0.205245        0.124714        0.385108        0.284932

  C1 =         0.174184       0.0663094        0.352054        0.407452
  C2 =         0.174184       0.0663094        0.352054        0.407452

TEST006
  TET_MESH_TET_NEIGHBORS computes the 4 neighboring
  tetrahedrons of each tetrahedron in a tet mesh.
  containing a point.

  This mesh has tetrahedron order 4
  The number of tetrahedrons is   144

  First 10 Tets:

  Row:      0       1       2       3  
  Col

    0:      0       1       3       9  
    1:      1       3       4       9  
    2:      1       4       9      10  
    3:      1       2       4      10  
    4:      3       4       9      12  
    5:      2       4       5      10  
    6:      4       9      10      12  
    7:      3       4       6      12  
    8:      4       5       7      13  
    9:      4       6       7      12  

  First 10 Tet Neighbors:

  Row:      0       1       2       3  
  Col

    0:      1      -1      -1      -1  
    1:      4       2       0      -1  
    2:      6      -1       3       1  
    3:      5       2      -1      -1  
    4:      6      -1       7       1  
    5:     14      13       3      -1  
    6:     20      23       4       2  
    7:      9      -1       4      -1  
    8:     10      19      14      -1  
    9:     18      19       7      -1  

TEST007
  TET_MESH_SEARCH_NAIVE uses a naive algorithm
  to search a tetrahedral mesh for the tetrahedron
  containing a point.

  This mesh has tetrahedron order 4
  The number of tetrahedrons is   144

  Point was chosen from tetrahedron          31
  Naive search ended in tetrahedron          31, number of steps = 31
  Delaunay search ended in tetrahedron 31, number of steps = 5

  Point was chosen from tetrahedron          59
  Naive search ended in tetrahedron          59, number of steps = 59
  Delaunay search ended in tetrahedron 59, number of steps = 4

  Point was chosen from tetrahedron           6
  Naive search ended in tetrahedron           6, number of steps = 6
  Delaunay search ended in tetrahedron 6, number of steps = 10

  Point was chosen from tetrahedron          57
  Naive search ended in tetrahedron          57, number of steps = 57
  Delaunay search ended in tetrahedron 57, number of steps = 7

  Point was chosen from tetrahedron         129
  Naive search ended in tetrahedron         129, number of steps = 129
  Delaunay search ended in tetrahedron 129, number of steps = 12

TET_MESH_TEST
  Normal end of execution.

21 January 2020 11:07:17 AM
